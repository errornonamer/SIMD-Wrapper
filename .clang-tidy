Checks: '*,
         -clang-diagnostic-unused-command-line-argument,
         -cppcoreguidelines-avoid-magic-numbers,
         -cppcoreguidelines-non-private-member-variables-in-classes,
         -cppcoreguidelines-macro-usage,
         -cppcoreguidelines-pro-bounds-pointer-arithmetic,
         -cppcoreguidelines-pro-type-reinterpret-cast,
         -cppcoreguidelines-pro-type-union-access,
         -fuchsia-default-arguments-calls,
         -fuchsia-default-arguments-declarations,
         -fuchsia-overloaded-operator,
         -fuchsia-trailing-return,
         -hicpp-uppercase-literal-suffix,
         -misc-non-private-member-variables-in-classes,
         -modernize-use-trailing-return-type,
         -portability-simd-intrinsics,
         -readability-magic-numbers,
         -readability-uppercase-literal-suffix'
CheckOptions:
  - {key: modernize-use-auto.MinTypeNameLength, value: 5}
  - {key: modernize-use-auto.RemoveStars,       value: 0}
  - {key: readability-identifier-naming.VariableCase,                  value: camelBack}
  - {key: readability-identifier-naming.NamespaceCase,                 value: CamelCase}
  - {key: readability-identifier-naming.InlineNamespaceCase,           value: CamelCase}
  - {key: readability-identifier-naming.StructCase,                    value: CamelCase}
  - {key: readability-identifier-naming.ClassCase,                     value: CamelCase}
  - {key: readability-identifier-naming.ParameterCase,                 value: CamelCase}
  - {key: readability-identifier-naming.MemberCase,                    value: CamelCase}
  - {key: readability-identifier-naming.Enum,                          value: CamelCase}
  - {key: readability-identifier-naming.FunctionCase,                  value: CamelCase}
  - {key: readability-identifier-naming.TemplateTemplateParameterCase, value: UPPER_CASE}
  - {key: readability-identifier-naming.MacroDefinitionCase,           value: UPPER_CASE}
  - {key: readability-identifier-naming.MemberPrefix   , value: m}
  - {key: readability-identifier-naming.ParameterPrefix, value: p}
